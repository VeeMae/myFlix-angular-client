{"version":3,"sources":["./src/app/user-profile/user-profile.component.ts","./src/app/user-profile/user-profile.component.html","./src/app/movie-card/movie-card.component.ts","./src/app/movie-card/movie-card.component.html","./src/app/movie-description/movie-description.component.ts","./src/app/movie-description/movie-description.component.html","./src/app/movie-director/movie-director.component.ts","./src/app/movie-director/movie-director.component.html","./src/environments/environment.ts","./src/app/user-registration-form/user-registration-form.component.ts","./src/app/user-registration-form/user-registration-form.component.html","./src/app/movie-genre/movie-genre.component.ts","./src/app/movie-genre/movie-genre.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/welcome-page/welcome-page.component.ts","./src/app/welcome-page/welcome-page.component.html","./src/app/user-login-form/user-login-form.component.ts","./src/app/user-login-form/user-login-form.component.html","./src/app/delete-user/delete-user.component.ts","./src/app/delete-user/delete-user.component.html","./src/app/fetch-api-data.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit, Input, Inject } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { GetUserService, EditUserService, GetFaveMoviesService, DeleteMovieService, GetAllMoviesService, DeleteUserService } from '../fetch-api-data.service';\nimport { MovieGenreComponent } from '../movie-genre/movie-genre.component';\nimport { MovieDirectorComponent } from '../movie-director/movie-director.component';\nimport { MovieDescriptionComponent } from '../movie-description/movie-description.component';\nimport { DeleteUserComponent } from '../delete-user/delete-user.component';\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.scss']\n})\n\nexport class UserProfileComponent implements OnInit {\n\n    @Input() userData = { username: '', password: '', email: '', birthday: ''};\n\n    faveMovies: any[] = [];\n    movies: any[] = [];\n    faveMovieIds: any[] = [];\n\n    constructor(\n      public fetchApiData: EditUserService,\n      public fetchApiDataAll: GetAllMoviesService,\n      public fetchApiDataUser: GetUserService,\n      public fetchApiDataMovies: GetFaveMoviesService,\n      public fetchApiDataDeleteMovie: DeleteMovieService,\n      public fetchApiDataDeleteUser: DeleteUserService,\n      public dialog: MatDialog,\n      public snackBar: MatSnackBar,\n      private router: Router\n    ) { }\n\n    ngOnInit(): void {\n        this.getFaveMovies();\n    }\n\n\n    getFaveMovies(): void {\n        this.fetchApiDataAll.getAllMovies().subscribe((resp: any) => {\n            this.fetchApiDataMovies.getFaveMovies().subscribe((resp: any) => {\n                this.faveMovieIds = resp.FavoriteMovies;\n                console.log(this.faveMovieIds);\n\n                 this.faveMovies = this.movies.filter((movie) => this.faveMovieIds.includes(movie._id))\n                 console.log(this.faveMovies)\n            })\n\n             this.movies = resp;\n            console.log(this.movies);\n\n        });\n    }\n\n    deleteFaveMovie(id: string): void {\n        this.fetchApiDataDeleteMovie.deleteMovie(id).subscribe((resp: any) => {\n            console.log(resp);\n            this.snackBar.open('Movie has been deleted', 'OK', {\n                duration: 2000\n            });\n\n            // Refresh page after deletion\n            this.router.navigate(['user'])\n            .then(() => {\n                window.location.reload();\n            });\n        });\n    }\n\n    editUserData(): void {\n        this.fetchApiData.editUser(this.userData).subscribe((result) => {\n            console.log(result);\n            this.snackBar.open('Update successful!', 'OK', {\n                duration: 2000\n            });\n            this.router.navigate(['user']);\n        }, (result) => {\n            console.log(result)\n            this.snackBar.open(result, 'OK', {\n            duration: 2000\n            });\n        });\n    }\n\n    openDeleteUserDialog(): void {\n        this.dialog.open(DeleteUserComponent, {\n            width: '280px'\n        })\n    }\n\n    openGenreDialog(name: string, description: string): void {\n        this.dialog.open(MovieGenreComponent, {\n            data: { name, description},\n            width: '600px',\n            height: 'auto'\n        });\n    }\n\n    openDirectorDialog(name: string, bio: string, birth: string): void {\n        this.dialog.open(MovieDirectorComponent, {\n            data: { name, bio, birth},\n            width: '600px',\n            height: 'auto'\n        })\n    }\n\n    openDescriptionDialog(description: string): void {\n        this.dialog.open(MovieDescriptionComponent, {\n            data: { description},\n            width: '600px',\n            height: 'auto'\n        })\n    }\n\n    openProfile(): void {\n        this.fetchApiDataUser.getUser().subscribe((result) => {\n            localStorage.getItem('token')\n            const username = localStorage.getItem('user');\n            this.snackBar.open(`Welcome to your profile, ${username}!`, 'OK', {\n            duration: 5000\n            });\n            this.router.navigate(['user']);\n        }, (result) => {\n            this.snackBar.open(result, 'OK', {\n            duration: 5000\n            });\n        });\n    }\n\n     logoutUser(): void {\n        localStorage.clear();\n    }\n\n\n\n\n}\n","<mat-toolbar class=\"toolbar\">\n  <span routerLink=\"/movies\">MyFlix</span>\n  <span class=\"spacer\"></span>\n  <button (click)=\"openProfile()\" class=\"profile-btn\">Profile</button>\n  <span class=\"spacer2\"></span>\n  <button (click)=\"logoutUser()\" routerLink=\"/\" class=\"logout-btn\">\n    Logout\n  </button>\n  <button (click)=\"openDeleteUserDialog()\" class=\"delete-user-btn\">\n    Delete Profile\n  </button>\n</mat-toolbar>\n\n<div class=\"profile-page\">\n  <mat-card id=\"update-container\">\n    <mat-card-header id=\"update-header\">\n      <mat-card-title>Update Profile</mat-card-title>\n    </mat-card-header>\n    <mat-card-content id=\"update-card-content\">\n      <form>\n        <mat-form-field>\n          <input\n            matInput\n            [(ngModel)]=\"userData.username\"\n            placeholder=\"Username\"\n            type=\"text\"\n            name=\"Username\"\n          />\n        </mat-form-field>\n        <mat-form-field>\n          <input\n            matInput\n            [(ngModel)]=\"userData.password\"\n            type=\"password\"\n            placeholder=\"Password\"\n            name=\"Password\"\n          />\n        </mat-form-field>\n        <mat-form-field>\n          <input\n            matInput\n            [(ngModel)]=\"userData.email\"\n            type=\"email\"\n            placeholder=\"Email\"\n            name=\"Email\"\n          />\n        </mat-form-field>\n        <mat-form-field>\n          <input\n            matInput\n            [(ngModel)]=\"userData.birthday\"\n            type=\"date\"\n            placeholder=\"Birthday\"\n            name=\"Birthday\"\n          />\n        </mat-form-field>\n      </form>\n    </mat-card-content>\n    <mat-card-actions>\n      <button mat-raised-button (click)=\"editUserData()\" color=\"primary\">\n        Update\n      </button>\n    </mat-card-actions>\n  </mat-card>\n\n  <h1 id=\"fave-movies-header\">Favorite Movies</h1>\n  <div class=\"movie-card-container\">\n    <mat-card *ngFor=\"let movie of faveMovies; let i = index\" id=\"movie-card\">\n      <mat-card-header class=\"card-header\">\n        <mat-card-title>{{ movie.Title }}</mat-card-title>\n        <mat-card-subtitle\n          >Directed by: {{ movie.Director.Name }}</mat-card-subtitle\n        >\n      </mat-card-header>\n      <img src=\"{{ movie.ImagePath }}\" alt=\"{{ movie.Title }}\" />\n      <mat-card-actions class=\"card-actions\">\n        <button\n          mat-button\n          color=\"primary\"\n          (click)=\"openGenreDialog(movie.Genre.Name, movie.Genre.Description)\"\n        >\n          Genre\n        </button>\n        <button\n          mat-button\n          color=\"primary\"\n          (click)=\"\n            openDirectorDialog(\n              movie.Director.Name,\n              movie.Director.Bio,\n              movie.Director.Birth\n            )\n          \"\n        >\n          Director\n        </button>\n        <button\n          mat-button\n          color=\"primary\"\n          (click)=\"openDescriptionDialog(movie.Description)\"\n        >\n          Synopsis\n        </button>\n        <button (click)=\"deleteFaveMovie(movie._id)\" class=\"card-delete-btn\">\n          Delete\n        </button>\n      </mat-card-actions>\n    </mat-card>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { GetAllMoviesService, AddMovieService, GetUserService } from '../fetch-api-data.service';\nimport { MovieGenreComponent } from '../movie-genre/movie-genre.component';\nimport { MovieDirectorComponent } from '../movie-director/movie-director.component';\nimport { MovieDescriptionComponent } from '../movie-description/movie-description.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-movie-card',\n  templateUrl: './movie-card.component.html',\n  styleUrls: ['./movie-card.component.scss']\n})\n\nexport class MovieCardComponent implements OnInit {\n\n  movies: any[] = [];\n\n    constructor(\n        public fetchApiData: GetAllMoviesService,\n        public fetchApiDataFaves: AddMovieService,\n        public fetchApiDataUser: GetUserService,\n        public dialog: MatDialog,\n        public snackBar: MatSnackBar,\n        private router: Router\n    ) { }\n\n    ngOnInit(): void {\n        this.getMovies();\n    }\n\n    // Get all movies\n    getMovies(): void {\n        this.fetchApiData.getAllMovies().subscribe((resp: any) => {\n            this.movies = resp;\n            console.log(this.movies);\n            return this.movies;\n        });\n    }\n\n    // Add movie to faves\n    addMovieToFaves(id: string): void {\n        this.fetchApiDataFaves.addMovie(id).subscribe((resp: any) => {\n            console.log(resp);\n            this.snackBar.open('Added to favorites!', 'OK', {\n            duration: 2000\n            });\n        });\n    }\n\n    // Open genre info\n    openGenreDialog(name: string, description: string): void {\n        this.dialog.open(MovieGenreComponent, {\n            data: { name, description},\n            width: '600px',\n            height: 'auto'\n        });\n    }\n\n    // Open director info\n    openDirectorDialog(name: string, bio: string, birth: string): void {\n        this.dialog.open(MovieDirectorComponent, {\n            data: { name, bio, birth},\n            width: '600px',\n            height: 'auto'\n        })\n    }\n\n    // Open description\n    openDescriptionDialog(description: string): void {\n        this.dialog.open(MovieDescriptionComponent, {\n            data: { description},\n            width: '600px',\n            height: 'auto'\n        })\n    }\n\n    // Go to profile\n    openProfile(): void {\n        this.fetchApiDataUser.getUser().subscribe((result) => {\n            localStorage.getItem('token')\n            const username = localStorage.getItem('user');\n            this.snackBar.open(`Welcome to your profile, ${username}!`, 'OK', {\n            duration: 5000\n            });\n            this.router.navigate(['user']);\n        }, (result) => {\n            this.snackBar.open(result, 'OK', {\n            duration: 5000\n            });\n        });\n    }\n\n    // refresh when clicking myFlix name in toolbar\n    refresh(): void {\n        this.router.navigate(['/movies'])\n            .then(() => {\n                window.location.reload();\n            });\n    }\n\n    // Logout function\n     logoutUser(): void {\n        localStorage.clear();\n    }\n}\n","<mat-toolbar class=\"toolbar\">\n  <span class=\"toolbar-header\" routerLink=\"/movies\" (click)=\"refresh()\"\n    >MyFlix</span\n  >\n  <span class=\"spacer\"></span>\n  <button (click)=\"openProfile()\" class=\"profile-btn\">Profile</button>\n  <span class=\"spacer2\"></span>\n  <button (click)=\"logoutUser()\" routerLink=\"/\" class=\"logout-btn\">\n    Logout\n  </button>\n</mat-toolbar>\n<div class=\"movie-card-container\">\n  <mat-card *ngFor=\"let movie of movies; let i = index\" class=\"movie-card\">\n    <mat-card-header class=\"card-header\">\n      <mat-card-title>{{ movie.Title }}</mat-card-title>\n      <mat-card-subtitle\n        >Directed by: {{ movie.Director.Name }}</mat-card-subtitle\n      >\n    </mat-card-header>\n    <img src=\"{{ movie.ImagePath }}\" alt=\"{{ movie.Title }}\" />\n    <mat-card-actions class=\"card-actions\">\n      <button\n        mat-button\n        color=\"primary\"\n        (click)=\"openGenreDialog(movie.Genre.Name, movie.Genre.Description)\"\n      >\n        Genre\n      </button>\n      <button\n        mat-button\n        color=\"primary\"\n        (click)=\"\n          openDirectorDialog(\n            movie.Director.Name,\n            movie.Director.Bio,\n            movie.Director.Birth\n          )\n        \"\n      >\n        Director\n      </button>\n      <button\n        mat-button\n        color=\"primary\"\n        (click)=\"openDescriptionDialog(movie.Description)\"\n      >\n        Synopsis\n      </button>\n      <button\n        (click)=\"addMovieToFaves(movie._id)\"\n        class=\"card-button\"\n        matTooltip=\"Add to favorites!\"\n        aria-label=\"Button that displays a tooltip when focused or hovered over. Let's you add a movie to list of favorites.\"\n      >\n        <mat-icon style=\"margin-top: 8px\">favorite_border</mat-icon>\n      </button>\n    </mat-card-actions>\n  </mat-card>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-movie-description',\n  templateUrl: './movie-description.component.html',\n  styleUrls: ['./movie-description.component.scss']\n})\nexport class MovieDescriptionComponent implements OnInit {\n\n    constructor(\n      @Inject(MAT_DIALOG_DATA)\n      public data: {\n      description: string\n    }\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-card>\n  <mat-card-header class=\"card-header\">\n    <mat-card-title>Movie Synopsis</mat-card-title>\n  </mat-card-header>\n  <mat-card-content>{{ data.description }}</mat-card-content>\n</mat-card>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-movie-director',\n  templateUrl: './movie-director.component.html',\n  styleUrls: ['./movie-director.component.scss']\n})\nexport class MovieDirectorComponent implements OnInit {\n\n    constructor(\n      @Inject(MAT_DIALOG_DATA)\n      public data: {\n      name: string;\n      bio: string;\n      birth: string;\n    }\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-card>\n  <mat-card-header class=\"card-header\">\n    <mat-card-title>{{ data.name }}</mat-card-title>\n  </mat-card-header>\n  <mat-card-content>{{ data.bio }}</mat-card-content>\n  <mat-card-content class=\"birthday\"\n    ><span>Birthday:</span>\n    {{ data.birth | date: \"longDate\" }}</mat-card-content\n  >\n</mat-card>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit, Input } from '@angular/core';\nimport { UserRegistrationService } from '../fetch-api-data.service';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n// Selector property defines the custom HTML element, into which this component will render\n  selector: 'app-user-registration-form',\n  templateUrl: './user-registration-form.component.html',\n  styleUrls: ['./user-registration-form.component.scss']\n})\n\nexport class UserRegistrationFormComponent implements OnInit {\n\n  @Input() userData = { username: '', password: '', email: '', birthday: ''};\n\n    constructor(\n      public fetchApiData: UserRegistrationService,\n      public dialogRef: MatDialogRef<UserRegistrationFormComponent>,\n      public snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n  }\n\n    // This is the function responsible for sending the form inputs to the backend\n    registerUser(): void {\n        this.fetchApiData.userRegistration(this.userData).subscribe((result) => {\n\n    // Logic for a successful user registration goes here! (To be implemented)\n        this.dialogRef.close(); // This will close the modal on success!\n        console.log(result)\n        this.snackBar.open('Successfully registered user! Please log in to continue.', 'OK', {\n            duration: 8000\n        });\n        }, (result) => {\n            console.log(result)\n            this.snackBar.open(result, 'OK', {\n            duration: 8000\n            });\n        });\n    }\n\n}\n","<!-- Wiring up what was defined in the component's file with some HTML -->\n<mat-card>\n  <mat-card-header>\n    <mat-card-title>Sign Up!</mat-card-title>\n  </mat-card-header>\n  <mat-card-content>\n    <form>\n      <mat-form-field>\n        <input\n          matInput\n          [(ngModel)]=\"userData.username\"\n          placeholder=\"Username\"\n          type=\"text\"\n          name=\"Username\"\n          required\n        />\n      </mat-form-field>\n      <mat-form-field>\n        <input\n          matInput\n          [(ngModel)]=\"userData.password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          name=\"Password\"\n          required\n        />\n      </mat-form-field>\n      <mat-form-field>\n        <input\n          matInput\n          [(ngModel)]=\"userData.email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          name=\"Email\"\n          required\n        />\n      </mat-form-field>\n      <mat-form-field>\n        <input\n          matInput\n          [(ngModel)]=\"userData.birthday\"\n          type=\"date\"\n          placeholder=\"Birthday\"\n          name=\"Birthday\"\n        />\n      </mat-form-field>\n    </form>\n  </mat-card-content>\n  <mat-card-actions>\n    <button mat-raised-button (click)=\"registerUser()\" color=\"primary\">\n      Submit\n    </button>\n  </mat-card-actions>\n</mat-card>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-movie-genre',\n  templateUrl: './movie-genre.component.html',\n  styleUrls: ['./movie-genre.component.scss']\n})\nexport class MovieGenreComponent implements OnInit {\n\n    constructor(\n\n      @Inject(MAT_DIALOG_DATA)\n      public data: {\n      name: string;\n      description: string;\n    }\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-card>\n  <mat-card-header>\n    <mat-card-title id=\"genre-card-text\">{{ data.name }}</mat-card-title>\n  </mat-card-header>\n  <mat-card-content>{{ data.description }}</mat-card-content>\n</mat-card>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n\nexport class AppComponent {\n    title = 'myFlix-Angular-client';\n}\n","<!-- Element that lets Angular know which component to show for the selected route.  -->\n<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { FormsModule } from '@angular/forms';\nimport { MatIconModule } from '@angular/material/icon';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\n\n\nimport { UserRegistrationFormComponent } from './user-registration-form/user-registration-form.component';\nimport { UserLoginFormComponent } from './user-login-form/user-login-form.component';\nimport { MovieCardComponent } from './movie-card/movie-card.component';\nimport { WelcomePageComponent } from './welcome-page/welcome-page.component';\nimport { UserProfileComponent } from './user-profile/user-profile.component';\nimport { MovieGenreComponent } from './movie-genre/movie-genre.component';\nimport { MovieDirectorComponent } from './movie-director/movie-director.component';\nimport { MovieDescriptionComponent } from './movie-description/movie-description.component';\nimport { DeleteUserComponent } from './delete-user/delete-user.component';\n\n\nconst appRoutes: Routes = [\n  { path: 'welcome', component: WelcomePageComponent },\n  { path: 'movies', component: MovieCardComponent },\n  { path: 'user', component: UserProfileComponent },\n  { path: '', redirectTo: 'welcome', pathMatch: 'prefix' },\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserRegistrationFormComponent,\n    UserLoginFormComponent,\n    MovieCardComponent,\n    WelcomePageComponent,\n    UserProfileComponent,\n    MovieGenreComponent,\n    MovieDirectorComponent,\n    MovieDescriptionComponent,\n    DeleteUserComponent\n  ],\n    imports: [\n      RouterModule.forRoot(appRoutes),\n      BrowserModule,\n      HttpClientModule,\n      AppRoutingModule,\n      BrowserAnimationsModule,\n      FormsModule,\n      MatButtonModule,\n      MatInputModule,\n      MatCardModule,\n      MatFormFieldModule,\n      MatDialogModule,\n      MatSnackBarModule,\n      MatIconModule,\n      MatToolbarModule,\n      MatTooltipModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { UserLoginFormComponent } from '../user-login-form/user-login-form.component';\nimport { UserRegistrationFormComponent } from '../user-registration-form/user-registration-form.component';\nimport { MatDialog } from '@angular/material/dialog';\n\n\n@Component({\n  selector: 'app-welcome-page',\n  templateUrl: './welcome-page.component.html',\n  styleUrls: ['./welcome-page.component.scss']\n})\n\nexport class WelcomePageComponent implements OnInit {\n\n  constructor(public dialog: MatDialog) { }\n\n  ngOnInit(): void {\n  }\n\n    // Function that will open the dialog when the signup button is clicked\n    openUserRegistrationDialog(): void {\n        this.dialog.open(UserRegistrationFormComponent, {\n            // Assign the dialog width\n            width: '280px'\n        });\n    }\n\n    openUserLoginDialog(): void {\n        this.dialog.open(UserLoginFormComponent, {\n            width: '280px'\n        });\n    }\n}\n","<div class=\"main-page\">\n  <h1 class=\"main-page-header\">Welcome to myFlix!</h1>\n  <button\n    mat-raised-button\n    (click)=\"openUserRegistrationDialog()\"\n    class=\"sign-up-btn\"\n  >\n    Sign Up\n  </button>\n  <button mat-raised-button (click)=\"openUserLoginDialog()\" color=\"primary\">\n    Login\n  </button>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { UserLoginService } from '../fetch-api-data.service';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-user-login-form',\n  templateUrl: './user-login-form.component.html',\n  styleUrls: ['./user-login-form.component.scss']\n})\n\nexport class UserLoginFormComponent implements OnInit {\n\n  @Input() userData = { username: '', password: '' };\n\n    constructor(\n      public fetchApiData: UserLoginService,\n      public dialogRef: MatDialogRef<UserLoginFormComponent>,\n      public snackBar: MatSnackBar,\n      private router: Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n    // This is the function responsible for sending the form inputs to the backend\n    loginUser(): void {\n        this.fetchApiData.userLogin(this.userData).subscribe((result) => {\n\n    // Logic for a successful user login goes here\n            this.dialogRef.close(); // This will close the modal on success!\n            console.log(result)\n            localStorage.setItem('user', result.user.username);\n            localStorage.setItem('token', result.token);\n            this.snackBar.open('Successful login!', 'OK', {\n            duration: 2000\n            });\n            this.router.navigate(['movies']);\n\n        }, (result) => {\n            console.log(result)\n            this.snackBar.open(result, 'OK', {\n            duration: 2000\n            });\n        });\n    }\n\n}\n","<!-- Wiring up what was defined in the component's file with some HTML -->\n<mat-card>\n  <mat-card-header>\n    <mat-card-title>Log In!</mat-card-title>\n  </mat-card-header>\n  <mat-card-content>\n    <form>\n      <mat-form-field>\n        <input\n          matInput\n          [(ngModel)]=\"userData.username\"\n          placeholder=\"Username\"\n          type=\"text\"\n          name=\"Username\"\n          required\n        />\n      </mat-form-field>\n      <mat-form-field>\n        <input\n          matInput\n          [(ngModel)]=\"userData.password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          name=\"Password\"\n          required\n        />\n      </mat-form-field>\n    </form>\n  </mat-card-content>\n  <mat-card-actions>\n    <button mat-raised-button (click)=\"loginUser()\" color=\"primary\">\n      Log In\n    </button>\n  </mat-card-actions>\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\nimport { DeleteUserService } from '../fetch-api-data.service';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-delete-user',\n  templateUrl: './delete-user.component.html',\n  styleUrls: ['./delete-user.component.scss']\n})\nexport class DeleteUserComponent implements OnInit {\n\n    constructor(\n      public fetchApiData: DeleteUserService,\n      public dialogRef: MatDialogRef<DeleteUserComponent>,\n      public snackBar: MatSnackBar,\n      private router: Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n    // Delete user function\n    deleteUserData(): void {\n        this.fetchApiData.deleteUser().subscribe((result) => {\n            console.log(result);\n            this.snackBar.open('User has been deleted!', 'OK', {\n                duration: 8000\n            });\n        }, (result) => {\n            console.log(result)\n            this.snackBar.open(result, 'OK', {\n                duration: 2000\n            });\n\n            // Refresh page after deletion\n            this.router.navigate(['/'])\n            .then(() => {\n                window.location.reload();\n            });\n        });\n    }\n\n    // refresh after cancelling\n    refresh(): void {\n        this.router.navigate(['/user'])\n            .then(() => {\n                window.location.reload();\n            });\n    }\n\n}\n","<mat-card id=\"delete-user-card\">\n  <mat-card-header class=\"card-header\">\n    <mat-card-title\n      >Are you 100% sure you want to delete your profile? There's no going\n      back!</mat-card-title\n    >\n  </mat-card-header>\n  <mat-card-content id=\"delete-user-card_content\">\n    <button (click)=\"refresh()\" class=\"cancel-btn\">Cancel!</button>\n    <button (click)=\"deleteUserData()\" class=\"delete-user-btn\">\n      Delete Profile!\n    </button>\n  </mat-card-content>\n</mat-card>\n","import { Injectable } from '@angular/core';\nimport { catchError } from 'rxjs/internal/operators';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n// The API URL that will provide data for the client app\nconst apiUrl = 'https://myflix-movie-application.herokuapp.com/';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class UserRegistrationService {\n\n    constructor(private http: HttpClient) { }\n\n    // API call for the user registration endpoint\n    public userRegistration(userDetails: any): Observable<any> {\n        console.log(userDetails);\n        return this.http.post(apiUrl + 'users', userDetails).pipe(\n            catchError(this.handleError)\n        );\n    }\n\n    private handleError(error: HttpErrorResponse): any {\n    if (error.error instanceof ErrorEvent) {\n    console.error('Some error occurred:', error.error.message);\n    } else {\n    console.error(\n        `Error Status code ${error.status}, ` +\n        `Error body is: ${error.error}`);\n    }\n    return throwError(\n    'Something bad happened; please try again later.');\n    }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class UserLoginService {\n\n    constructor(private http: HttpClient) { }\n\n    // API call for the user login endpoint\n    public userLogin(userDetails: any): Observable<any> {\n        console.log(userDetails);\n        return this.http.post(apiUrl + 'login', userDetails).pipe(\n            // map((user: any) => {\n            //     if (user && user.token) {\n            //         localStorage.setItem('currentUser', JSON.stringify(user));\n            //     }\n            //     return user;\n            // }),\n            catchError(this.handleError)\n        );\n    }\n\n    private handleError(error: HttpErrorResponse): any {\n    if (error.error instanceof ErrorEvent) {\n    console.error('Some error occurred:', error.error.message);\n    } else {\n    console.error(\n        `Error Status code ${error.status}, ` +\n        `Error body is: ${error.error}`);\n    }\n    return throwError(\n    'Something bad happened; please try again later.');\n    }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class GetAllMoviesService {\n\n    constructor(private http: HttpClient) { }\n\n    // API call to get all movies endpoint\n    public getAllMovies(): Observable<any> {\n        const token = localStorage.getItem('token');\n        return this.http.get(apiUrl + 'movies', {\n            headers: new HttpHeaders(\n                {\n                    Authorization: 'Bearer ' + token,\n                }),\n        }).pipe(\n            map(this.extractResponseData),\n            catchError(this.handleError)\n        );\n    }\n\n    private extractResponseData(res: any): any {\n        const body = res;\n        return body || { };\n    }\n\n    private handleError(error: HttpErrorResponse): any {\n    if (error.error instanceof ErrorEvent) {\n    console.error('Some error occurred:', error.error.message);\n    } else {\n    console.error(\n        `Error Status code ${error.status}, ` +\n        `Error body is: ${error.error}`);\n    }\n    return throwError(\n    'Something bad happened; please try again later.');\n    }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class GetMovieByTitleService {\n\n    constructor(private http: HttpClient) { }\n\n    // API call to get movie by title endpoint\n    public getMovieByTitle(): Observable<any> {\n        const token = localStorage.getItem('token');\n        return this.http.get(apiUrl + 'movies/:Title' , {\n            headers: new HttpHeaders(\n                {\n                    Authorization: 'Bearer ' + token,\n                })\n        }).pipe(\n            map(this.extractResponseData),\n            catchError(this.handleError)\n        );\n    }\n\n    private extractResponseData(res: any): any {\n        const body = res;\n        return body || { };\n    }\n\n    private handleError(error: HttpErrorResponse): any {\n    if (error.error instanceof ErrorEvent) {\n    console.error('Some error occurred:', error.error.message);\n    } else {\n    console.error(\n        `Error Status code ${error.status}, ` +\n        `Error body is: ${error.error}`);\n    }\n    return throwError(\n    'Something bad happened; please try again later.');\n    }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class GetDirectorService {\n\n    constructor(private http: HttpClient) { }\n\n    // API call to get a director by name endpoint\n    public getDirector(): Observable<any> {\n        const token = localStorage.getItem('token');\n        return this.http.get(apiUrl + 'movies/director/:Name' , {\n            headers: new HttpHeaders(\n                {\n                    Authorization: 'Bearer ' + token,\n                })\n        }).pipe(\n            map(this.extractResponseData),\n            catchError(this.handleError)\n        );\n    }\n\n    private extractResponseData(res: any): any {\n        const body = res;\n        return body || { };\n    }\n\n    private handleError(error: HttpErrorResponse): any {\n    if (error.error instanceof ErrorEvent) {\n    console.error('Some error occurred:', error.error.message);\n    } else {\n    console.error(\n        `Error Status code ${error.status}, ` +\n        `Error body is: ${error.error}`);\n    }\n    return throwError(\n    'Something bad happened; please try again later.');\n    }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class GetGenreService {\n\n    constructor(private http: HttpClient) { }\n\n    // API call to get a genre by name endpoint\n    public getGenre(): Observable<any> {\n        const token = localStorage.getItem('token');\n        return this.http.get(apiUrl + 'movies/genre/:Name' , {\n            headers: new HttpHeaders(\n                {\n                    Authorization: 'Bearer ' + token,\n                })\n        }).pipe(\n            map(this.extractResponseData),\n            catchError(this.handleError)\n        );\n    }\n\n    private extractResponseData(res: any): any {\n        const body = res;\n        return body || { };\n    }\n\n    private handleError(error: HttpErrorResponse): any {\n    if (error.error instanceof ErrorEvent) {\n    console.error('Some error occurred:', error.error.message);\n    } else {\n    console.error(\n        `Error Status code ${error.status}, ` +\n        `Error body is: ${error.error}`);\n    }\n    return throwError(\n    'Something bad happened; please try again later.');\n    }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class GetUserService {\n\n    constructor(private http: HttpClient) { }\n\n    // API call to get user by username endpoint\n    public getUser(): Observable<any> {\n        const token = localStorage.getItem('token');\n        const username = localStorage.getItem('user');\n        return this.http.get(apiUrl + `users/${username}` , {\n            headers: new HttpHeaders(\n                {\n                    Authorization: 'Bearer ' + token,\n                })\n        }).pipe(\n            map(this.extractResponseData),\n            catchError(this.handleError)\n        );\n    }\n\n    private extractResponseData(res: any): any {\n        const body = res;\n        return body || { };\n    }\n\n    private handleError(error: HttpErrorResponse): any {\n    if (error.error instanceof ErrorEvent) {\n    console.error('Some error occurred:', error.error.message);\n    } else {\n    console.error(\n        `Error Status code ${error.status}, ` +\n        `Error body is: ${error.error}`);\n    }\n    return throwError(\n    'Something bad happened; please try again later.');\n    }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class GetFaveMoviesService {\n\n    constructor(private http: HttpClient) { }\n\n    // API endpoint leads to user profile, which displays all of user's fave movies\n    public getFaveMovies(): Observable<any> {\n        const token = localStorage.getItem('token');\n        const username = localStorage.getItem('user');\n        return this.http.get(apiUrl + `users/${username}` , {\n            headers: new HttpHeaders(\n                {\n                    Authorization: 'Bearer ' + token,\n                })\n        }).pipe(\n            map(this.extractResponseData),\n            catchError(this.handleError)\n        );\n    }\n\n    private extractResponseData(res: any): any {\n        const body = res;\n        return body || { };\n    }\n\n    private handleError(error: HttpErrorResponse): any {\n    if (error.error instanceof ErrorEvent) {\n    console.error('Some error occurred:', error.error.message);\n    } else {\n    console.error(\n        `Error Status code ${error.status}, ` +\n        `Error body is: ${error.error}`);\n    }\n    return throwError(\n    'Something bad happened; please try again later.');\n    }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AddMovieService {\n\n    constructor(private http: HttpClient) { }\n\n    // API call to add a movie endpoint\n    public addMovie(id: string): Observable<any> {\n        const token = localStorage.getItem('token');\n        const username = localStorage.getItem('user');\n        return this.http.put(apiUrl + `users/${username}/movies/${id}`, id, {\n            headers: new HttpHeaders(\n                {\n                    Authorization: 'Bearer ' + token,\n                })\n        }).pipe(\n            map(this.extractResponseData),\n            catchError(this.handleError)\n        );\n    }\n\n    private extractResponseData(res: any): any {\n        const body = res;\n        return body || { };\n    }\n\n    private handleError(error: HttpErrorResponse): any {\n    if (error.error instanceof ErrorEvent) {\n    console.error('Some error occurred:', error.error.message);\n    } else {\n    console.error(\n        `Error Status code ${error.status}, ` +\n        `Error body is: ${error.error}`);\n    }\n    return throwError(\n    'Something bad happened; please try again later.');\n    }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class EditUserService {\n\n    constructor(private http: HttpClient) { }\n\n    // API call to edit user endpoint\n    public editUser(userDetails: any): Observable<any> {\n        const token = localStorage.getItem('token');\n        const username = localStorage.getItem('user');\n        return this.http.put(apiUrl + `users/${username}` , userDetails, {\n            headers: new HttpHeaders(\n                {\n                    Authorization: 'Bearer ' + token,\n                })\n        }).pipe(\n            map(this.extractResponseData),\n            catchError(this.handleError)\n        );\n    }\n\n    private extractResponseData(res: any): any {\n        const body = res;\n        return body || { };\n    }\n\n    private handleError(error: HttpErrorResponse): any {\n    if (error.error instanceof ErrorEvent) {\n    console.error('Some error occurred:', error.error.message);\n    } else {\n    console.error(\n        `Error Status code ${error.status}, ` +\n        `Error body is: ${error.error}`);\n    }\n    return throwError(\n    'Please make sure to fill in the required items properly!');\n    }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class DeleteUserService {\n\n    constructor(private http: HttpClient) { }\n\n    // API call to delete user endpoint\n    public deleteUser(): Observable<any> {\n        const token = localStorage.getItem('token');\n        const username = localStorage.getItem('user');\n        return this.http.delete(apiUrl + `users/${username}` , {\n            headers: new HttpHeaders(\n                {\n                    Authorization: 'Bearer ' + token,\n                })\n        }).pipe(\n            map(this.extractResponseData),\n            catchError(this.handleError)\n        );\n    }\n\n    private extractResponseData(res: any): any {\n        const body = res;\n        return body || { };\n    }\n\n    private handleError(error: HttpErrorResponse): any {\n    if (error.error instanceof ErrorEvent) {\n    console.error('Some error occurred:', error.error.message);\n    } else {\n    console.error(\n        `Error Status code ${error.status}, ` +\n        `Error body is: ${error.error}`);\n    }\n    return throwError(\n    'Something bad happened; please try again later.');\n    }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class DeleteMovieService {\n\n    constructor(private http: HttpClient) { }\n\n    // API call to delete movie endpoint\n    public deleteMovie(id: string): Observable<any> {\n        const token = localStorage.getItem('token');\n        const username = localStorage.getItem('user');\n        return this.http.delete(apiUrl + `users/${username}/movies/delete/${id}` , {\n            headers: new HttpHeaders(\n                {\n                    Authorization: 'Bearer ' + token,\n                })\n        }).pipe(\n            map(this.extractResponseData),\n            catchError(this.handleError)\n        );\n    }\n\n    private extractResponseData(res: any): any {\n        const body = res;\n        return body || { };\n    }\n\n    private handleError(error: HttpErrorResponse): any {\n    if (error.error instanceof ErrorEvent) {\n    console.error('Some error occurred:', error.error.message);\n    } else {\n    console.error(\n        `Error Status code ${error.status}, ` +\n        `Error body is: ${error.error}`);\n    }\n    return throwError(\n    'Something bad happened; please try again later.');\n    }\n}\n\n\n\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}